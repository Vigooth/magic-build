import React from "react";
import { cardScyfallImage } from "../../components/constantes";
import { Button, Modal, ModalBody } from 'reactstrap';

export class HandGenerator extends React.Component {
  defaultState = {
    startingHandSize: 7,
    modal: false,
    currentHand:[],
    library: [],
    cardWidth:"252px",
    cardSpacing:"158px",
    mulligan: 0
  };
  state = this.defaultState;

  shuffleHand = () => {
    const library = _.shuffle(_.flatMapDeep(_.map(this.props.deck, card => _.times(card.quantity, () => card.multiverseid))));
    this.setState({library, currentHand: _.take(library, this.state.startingHandSize)})
  };
  drawCard = () => {
    const numberCardInHand = this.state.currentHand.length;
    this.setState({currentHand: _.take(this.state.library, numberCardInHand + 1)})
  };

  toggle = () => {
    this.state.modal ?
      this.setState({ ...this.defaultState })
      : this.setState({ modal: true }, this.shuffleHand)
  };
  resetHand = () => {
    this.setState({...this.defaultState, modal: true}, this.shuffleHand)
  };
  mulligan = () => {
    if (this.state.mulligan<=7) {
      this.setState({...this.defaultState, mulligan: this.state.mulligan + 1, startingHandSize: this.defaultState.startingHandSize - this.state.mulligan,  modal: true}, this.shuffleHand);
    }

  };
  externalCloseBtn = () =>  <button key="1" className="close" style={{ position: 'absolute', top: '15px', right: '15px' }} onClick={this.toggle}>&times;</button>;

  render() {
    return (
      <div>
        <Button color="danger"  title="Generate hand" onClick={this.resetHand}><svg height="28" viewBox="0 0 492.8 492.8" xmlns="http://www.w3.org/2000/svg">
          <g>
            <title>background</title>
            <rect x="-1" y="-1" width="494.819" height="494.819" id="canvas_background" fill="none"/>
          </g>
          <g>
            <title>Layer 1</title>
            <g>
              <path d="m491.469,134.759c-2.593,-9.279 -8.654,-16.993 -17.087,-21.734l-169.137,-94.975c-16.865,-9.471 -39.811,-2.927 -49.171,13.794l-12.825,22.804l32.409,9.739l9.208,-16.39c0.564,-0.999 1.434,-1.362 2.541,-1.362c0.503,0 1.048,0.072 1.664,0.203l169.136,94.975c0.727,0.411 1.245,1.063 1.467,1.861c0.23,0.799 0.111,1.637 -0.289,2.361l-106.598,189.782l-23.745,79.047c11.349,-1.37 21.581,-7.763 27.24,-17.856l131.896,-234.809c4.724,-8.408 5.882,-18.155 3.291,-27.44z"/>
              <path d="m377.208,131.824c-4.478,-8.384 -12.296,-14.759 -21.42,-17.509l-185.78,-55.814c-18.623,-5.642 -39.435,5.684 -44.994,24.192l-9.062,30.147l34.488,0l6.207,-20.651c0.419,-1.388 1.629,-2.089 3.37,-2.089c0.161,0 0.321,0.009 0.484,0.018l78.687,23.641c5.885,0.896 11.461,2.556 16.671,5.008l90.413,27.164c0.794,0.243 1.451,0.773 1.853,1.507c0.375,0.718 0.468,1.573 0.229,2.355l-57.385,190.91l0,93.677c5.306,-4.435 9.431,-10.294 11.495,-17.18l77.506,-257.896c2.755,-9.108 1.739,-19.137 -2.762,-27.48z"/>
              <path d="m230.095,137.605l-193.977,0c-19.917,0 -36.118,16.202 -36.118,36.113l0,269.303c0,19.911 16.201,36.113 36.118,36.113l193.977,0c19.917,0 36.116,-16.202 36.116,-36.113l0,-269.303c0,-19.911 -16.199,-36.113 -36.116,-36.113zm3.093,305.416c0,1.71 -1.382,3.095 -3.094,3.095l-193.976,0c-1.714,0 -3.096,-1.386 -3.096,-3.095l0,-269.303c0,-1.709 1.382,-3.095 3.096,-3.095l193.977,0c1.712,0 3.094,1.385 3.094,3.095l0,269.303l-0.001,0z"/>
              <path stroke="null" d="m223.665084,321.365461c0,3.844996 -1.362021,7.305494 -4.051144,10.381493c-2.689123,3.075999 -5.797325,4.614002 -9.289696,4.614002c-5.587786,0 -9.673856,-2.883754 -12.293128,-8.651244l-12.293136,-0.576752c-2.619272,0 -7.787971,1.268847 -15.436255,3.768102c-8.207066,2.499246 -12.921761,4.498644 -14.144087,6.036647c-1.920802,2.306993 -3.49237,7.689993 -4.714696,16.148992c-1.047712,6.920995 -1.571568,11.9964 -1.571568,15.264644c0,5.190755 0.733403,8.997304 2.235119,11.3812c1.501716,2.383896 4.540074,4.421749 9.15,6.036647c4.609926,1.614898 7.473663,2.537702 8.521375,2.729947c0.698469,0 1.816033,-0.076895 3.422519,-0.269148l3.143128,0c2.270037,0 4.609926,0.384499 7.054584,1.153505c3.492362,1.153496 4.994078,2.6915 4.47023,4.613994c-2.444658,-0.384499 -6.70535,0.192254 -12.816992,1.730249l7.333975,4.03725c0,2.307001 -2.968514,3.460498 -8.905535,3.460498c-1.571568,0 -3.701909,-0.384499 -6.425959,-1.153496c-2.689123,-0.768998 -4.505148,-1.153496 -5.378239,-1.153496l-3.387601,0c-0.174613,1.922494 -0.698469,4.806248 -1.57156,8.651244c-2.968514,-0.192254 -6.460885,-2.114748 -10.477103,-5.767499c-4.016218,-3.652751 -6.530728,-5.459895 -7.578432,-5.459895c-1.047712,0 -2.549428,1.845599 -4.435313,5.459895c-1.920794,3.652751 -2.863737,6.151998 -2.863737,7.497748c-2.270037,-1.34575 -4.19084,-3.844996 -5.762407,-7.497748c-0.698469,-2.499246 -1.46679,-4.998501 -2.339881,-7.497748c-1.746189,0.192254 -4.959161,4.229495 -9.673856,12.11175l-1.327103,0c-0.349235,-0.576752 -1.676337,-4.614002 -3.911449,-12.11175c-5.413165,-1.922502 -10.477103,-2.883745 -15.191798,-2.883745c-2.270037,0 -5.762399,0.576744 -10.477095,1.730249l-7.333967,-0.576752c1.047704,-1.153496 4.086062,-3.345147 9.15,-6.6134c5.937021,-3.844996 10.477095,-5.767499 13.620222,-5.767499c0.523856,0 1.222333,0.11535 2.095424,0.307604c0.873091,0.192245 1.571568,0.307596 2.095424,0.307596c1.222325,0 3.178054,-0.73055 5.902095,-2.153195c2.689123,-1.422653 4.260691,-2.729956 4.714696,-3.883452c0.454004,-1.153496 0.663551,-4.152601 0.663551,-8.920401c0,-10.958245 -2.61928,-19.10964 -7.857823,-24.49264c-4.540082,-4.806248 -12.048671,-8.266745 -22.525766,-10.381501c-2.793893,10.958254 -10.651716,16.418149 -23.538552,16.418149c-4.19084,0 -8.381679,-2.768395 -12.572519,-8.343648c-4.295609,-5.690596 -6.391033,-10.766 -6.391033,-15.379994c0,-7.113249 2.689123,-12.957651 8.102288,-17.571645c-4.365453,-4.998501 -6.53072,-10.073897 -6.53072,-15.264644c0,-4.806256 1.362021,-9.035751 4.051144,-12.688503c2.689123,-3.652743 6.251337,-5.767499 10.61679,-6.344243c-0.349235,-6.151998 1.466798,-10.381501 5.483016,-12.688503c-1.920802,-2.114748 -2.863737,-5.844394 -2.863737,-11.227394c0,-6.344251 1.920802,-11.611901 5.762399,-15.841396c3.841605,-4.229504 8.626152,-6.344251 14.388552,-6.344251c6.286263,0 11.420037,2.422352 15.436263,7.228599c5.06393,-19.032745 15.960111,-28.52989 32.723469,-28.52989c8.730922,0 16.414124,3.844996 23.049622,11.534998c2.444658,2.883745 3.666984,4.421749 3.666984,4.613994c-2.095416,0 -1.047704,-0.422946 3.143136,-1.307294c4.19084,-0.845901 7.229198,-1.307303 9.15,-1.307303c6.810111,0 12.816984,2.768403 18.055535,8.343648c4.540074,4.998501 7.683202,11.342744 9.429391,19.032745c1.222325,0.192245 3.143128,0.768998 5.762399,1.730249c3.841605,2.114748 5.762407,5.767499 5.762407,10.958245c0,0.961251 -0.698477,2.806851 -2.095424,5.459903c11.175572,6.920995 16.763366,16.533491 16.763366,28.837486c0,3.460506 -1.222333,8.266754 -3.666992,14.418751c4.540082,2.883745 6.810119,7.113249 6.810119,12.688494m-107.844281,12.688494l0,-3.729646c0,-4.421749 -1.955728,-8.458999 -5.902103,-12.111742c-3.911449,-3.652751 -7.892749,-5.459903 -11.908967,-5.459903c-4.889317,0 -9.429391,1.2304 -13.620231,3.729646c9.25477,-0.576744 19.731873,5.306105 31.396375,17.571645m-4.714696,-35.720034c-2.619272,-3.268252 -4.889309,-6.6134 -6.810111,-10.073897c-7.333967,2.114748 -11.000959,4.498644 -11.000959,7.190144c2.095424,-0.192245 5.133782,0.230701 9.15,1.307303c4.016226,1.076602 6.879963,1.576451 8.66107,1.576451m15.960119,-8.920401l0,-12.688494c-4.19084,-0.769006 -6.740268,-1.153505 -7.57844,-1.153505l0,4.306398l7.57844,9.497153m34.015646,-8.0745c-2.095416,-0.961251 -6.006864,-2.883754 -11.769272,-5.767499l0,24.800244c8.207058,-5.190746 12.118514,-11.534998 11.769272,-19.032745m14.388552,34.028241l-5.762407,-7.766896c-3.492362,2.6915 -7.01965,5.421447 -10.61679,8.228298c-3.59714,2.768395 -6.670424,5.921297 -9.289696,9.381794c7.857823,-4.613994 16.414124,-7.882246 25.633967,-9.804749" fill="#00160b" id="svg_2"/>
            </g>
          </g>
        </svg>
        </Button>
        <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className} external={this.externalCloseBtn()} size="lg" style={{maxWidth:'80%'}}>
          <div className="modal-header" style={{display: 'flex', flexDirection: 'column', justifyContent: "center"}}>
            <h4>Hand generator</h4>
            <div>
              <Button onClick={this.resetHand}>Reset</Button>
              <Button onClick={this.mulligan}>Mulligan</Button>
              <Button onClick={this.drawCard}>Draw</Button>
            </div>
          </div>

          <ModalBody style={{'display': 'flex', 'flexWrap':'wrap', paddingRight:this.state.cardSpacing, justifyContent: "center"}}>
            {_.map(this.state.currentHand, (multiverseid, i) => <div  key={i} className="hand" style={{width: this.state.cardSpacing,zIndex:this.state.currentHand.length-i}}><img  style={{'padding': '2px', width: this.state.cardWidth}}  src={ cardScyfallImage(this.props.deck[multiverseid].number, this.props.deck[multiverseid].code, 'en', 'normal' )} /></div>)}
          </ModalBody>
        </Modal>
      </div>

    )
  }

}
